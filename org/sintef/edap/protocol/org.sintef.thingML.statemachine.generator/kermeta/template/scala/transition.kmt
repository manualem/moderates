package thingML;
require kermeta
require "../../stringHelper.kmt"
require "../../helper.kmt"
using kermeta::standard
using kermeta::utils
class TransitionGenerator{
operation generate(transition:edap::Transition):String is do
var _res: StringBuffer init StringBuffer.new
_res.append("")
var helper : StringHelper init StringHelper.new
_res.append("\ncase class ")
_res.append(helper.firstToUpper(transition.source.name))
_res.append("_")
_res.append(helper.firstToUpper(transition.name))
_res.append("_")
_res.append(helper.firstToUpper(transition.target.name))
_res.append("(previous : State, next : State, master : Orchestrator) extends Transition(previous, next, master) { \n")
transition.event.each{ e | 
_res.append("  initEvent(")
_res.append(helper.firstToUpper(e.asType(edap::ReceiveMessage).message.name)+"Event")
_res.append(")\n")
}
_res.append("  \n  def executeActions() = {\n")
if transition.action != void then
_res.append("    ")
_res.append(transition.action.print)
_res.append("\n")
end
_res.append("  }\n}")
result := _res.toString
end
}
