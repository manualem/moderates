<%@ket
package="thingML"
require="../../stringHelper.kmt"
using=""
isAspectClass="false"
class="ProtocolPacketGenerator"
ismethod="false"operation="generate"
parameters="packageName:String, device:edap::Device, root:edap::EdapModel"
%>
<%var helper : StringHelper init StringHelper.new%>
/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Authors: Franck Fleurey and Brice Morin
 * Company: SINTEF IKT, Oslo, Norway
 * Date: 2011
 */
package <%=packageName%>;

public abstract class <%=device.name%>ProtocolPacket extends FixedSizePacket {
	
	public <%=device.name%>ProtocolPacket() {
		super();
	}
	
	protected void setCommandID(byte cmd) {
		data[4] = cmd;
	}
	
	protected byte getCommandID(){
		return data[4];
	}
	
	public abstract void acceptHandler(<%=device.name%>MessageHandler v);
	
	<%device.all_types.select{t | t.isKindOf(edap::PrimitiveType)}.each{ t | %>
	protected void set<%=helper.firstToUpper(helper.toJavaType(t))%>Value(<%=helper.firstToUpper(helper.toJavaType(t))%> v) {
		<%if helper.getJavaByteTypes.contains(t.name) then%>
			<%if helper.isJavaByte(t) then%>
		buffer.put(v);
			<%else%>
		buffer.put<%=helper.firstToUpper(helper.toJavaType(t))%>(v);
			<%end%>		
		<%else%>
			<%if helper.isJavaString(t) then%>
		if (v.length() > <%=helper.getSize(t)%>) v = v.substring(0, <%=helper.getSize(t)%>-1);
		buffer.put(v.getBytes());
			<%end%>
		<%end%>	
	}
	
	<%}%>
}