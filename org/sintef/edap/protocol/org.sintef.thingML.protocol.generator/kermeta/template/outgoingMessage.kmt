package thingML;
require kermeta
require "platform:/lookup/org.sintef.edap.model/model/edap.ecore"
require "../stringHelper.kmt"
using kermeta::standard
using kermeta::utils
class OutgointMessageGenerator{
operation generate(packageName:String, msg:edap::Message, deviceName:String):String is do
var _res: StringBuffer init StringBuffer.new
_res.append("")
var helper : StringHelper init StringHelper.new
_res.append("package ")
_res.append(packageName)
_res.append(";\n\npublic class ")
_res.append(msg.name)
_res.append(" extends Outgoing")
_res.append(deviceName)
_res.append("Message {\n\t\n\tpublic ")
_res.append(msg.name)
_res.append("(")
_res.append(helper.paramsToJava(msg))
_res.append(") {\n\t\tsetCommandID(")
_res.append(deviceName)
_res.append("Protocol.")
_res.append(helper.toJavaConstant(msg.name))
_res.append(");\n")
msg.parameters.each{ p | 
_res.append("\t\tset")
_res.append(helper.firstToUpper(helper.toJavaType(p.type)))
_res.append("Value(")
_res.append(p.name)
_res.append(");\n")
}
_res.append("\t}\n\n}")
result := _res.toString
end
}
