<%@ket
package="thingML"
require="platform:/lookup/org.sintef.edap.model/model/edap.ecore ../../stringHelper.kmt ../../CHelper.kmt"
using="edap"
isAspectClass="false"
class="ArduinoXBeeExampleGenerator"
ismethod="false"operation="generate"
parameters="packageName:String, device:edap::Device"
%>
<%var helper : StringHelper init StringHelper.new%>
<%var chelper : CHelper init CHelper.new.make%>
/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Authors: Franck Fleurey and Brice Morin
 * Company: SINTEF IKT, Oslo, Norway
 * Date: 2011
 */
#include <<%=device.name%>XBeeAPI.h>
#include <XBee.h>

// Replace the address by the actual address of the target XBee gateway
<%=device.name%>XBeeAPI _<%=device.name%>XBeeAPI = <%=device.name%>XBeeAPI(0x0013a200, 0x40331dc5);

<%device.receives.each{out | %>
void receive<%=out.name%>(<%=chelper.msgParamsDecl(out)%>) {
	// TODO: Implement the handler for message reception of the message <%=out.name%>
}
<%}%>

void setup()
{
	// initialize the <%=device.name%>XBeeAPI protocol
	_<%=device.name%>XBeeAPI.init_<%=device.name%>XBeeAPI();
	
	// TODO: Add your own setup code here
}

void loop()
{
	// check for incomming messages for the <%=device.name%>XBeeAPI protocol
	_<%=device.name%>XBeeAPI.poll_<%=device.name%>XBeeAPI();
	
	// TODO: Add any additional loop code here.
}
