 pointcut
{
	// The system root component in which we can add variables
	// to store the min/max info
	component WTS <PC_SystemRoot> {}
	
	// The idle state where we add the command handler
	// for Get Min and GetMax
	state WaitingForCmd <PC_Idle_State> {}
	
	// The sampling state where to add the logic to compute
	// min and max
	state ReadSensorValues <PC_Sample_State> {
		transition temperature <PC_setData> -> ? {}
	}
	
	// Detect all places where data is sent to the clients in order
	// to add the min/max data
	<PC_message_to_change>
	send WTSClient.SensorData('temp','0','0','batt')
	
	// Things which we refer to but are already in the base
	device WTSClient {
		message SensorData(temp : ?, min : ?, max : ?, batt : ?); 
		receives SensorData
	}

}
advice
{
	// add the min/max variables
	component WTS <AD_SystemRoot> {
		property min : Integer
		property max : Integer
	}
	
	// add the message handler to reset min/max
	state WaitingForCmd <AD_Idle_State> {
		transition ResetMinMax <AD_ResetMinMax> -> WaitingForCmd {
			event WTSClient#ResetMinMax
			action 'min = temp; max = temp;'
		}
	}
	
	// add the actions to compute the min/max
	state ReadSensorValues <PC_Sample_State> {
		transition temperature <PC_setData> -> ? {
			action {
				'if (temp > max) max = temp;'
				'if (temp < min) min = temp;'
			}
		}
	}
	
	// add the data to the SensorData messages
	<AD_message_to_change>
	send WTSClient.SensorData('temp','min','max','batt')
	
	// Things which we refer to but are already in the base
	datatype Integer;
	
	device WTSClient {
		message SensorData(temp : ?, min : ?, max : ?, batt : ?); 
		message ResetMinMax();
		sends ResetMinMax
		receives SensorData
	}
}
protocol
{
	set component <PC_System_Root>

}