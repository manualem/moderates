<%@ket
package="edapuC"
require="MSPGenerator.kmt"
using="edap"
isAspectClass="false"
class="MSPMain inherits PSMainGenerator "
isMethod="true"
operation="generate"
parameters="ucg : edapuC::UCGenerator"
%>
<%var a : edap::StateMachine init ucg.application.sm%>
 /******************************************************************************
 *                        INITIALISATION AND MAIN
 ******************************************************************************/

int main () {

<%=ucg.application.~init.text%>
	
	// initialize devices
<%ucg.all_devices.select{ d | d.init_required }.each{ d | %>	init_<%=d.device.name%>();
<%}%>
	
	// register state machine event handlers
<% a.all_incoming_events.each{ m | %>	register_<%=m.container.asType(EdapElement).name%>_receive_<%=m.name%>_listener(<%=a.str_id%>_<%=m.name%>_Event_Handler);
<%}%>

	// Initialize state machine
	<%=a.str_id%>_Current_State[<%=a.str_id%>] = <%=a.initial.str_id%>; // Set the initial state
	<%if a.initial.needs_entry then%><%=a.str_id%>_<%=a.initial.str_id%>_On_Entry();<%end%>
	
	__enable_interrupt();  // IMPORTANT :-)
	
	while(1) {
		int i;
		<%=ucg.application.poll.text%>
		// poll the drivers
<%ucg.all_devices.select{ d | d.polling_required }.each{ d | %>		poll_<%=d.device.name%>();
<%}%>
	}
}