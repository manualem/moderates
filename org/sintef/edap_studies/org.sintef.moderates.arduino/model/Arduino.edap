// Definition of some primitive
datatype Int8	
	@c_type "uint8_t"
	@java_type "byte";

datatype Int16	
	@c_type "int"
	@java_type "short";
	
datatype String
	@c_type "string8"
	@java_type "String"
	@size "8";
	
enumeration PinMode 
	@java_type "byte"
	@c_type "uint8_t"
{
	INPUT @enum_val "0"
	OUTPUT @enum_val "1"
}

enumeration DigitalState 
	@java_type "byte"
	@c_type "uint8_t"
{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}

enumeration DigitalPin 
	@java_type "byte"
	@c_type "uint8_t"
{
	PIN_0 @enum_val "0"
	PIN_1 @enum_val "1"
	PIN_2 @enum_val "2"
	PIN_3 @enum_val "3"
	PIN_4 @enum_val "4"
	PIN_5 @enum_val "5"
	PIN_6 @enum_val "6"
	PIN_7 @enum_val "7"
	PIN_8 @enum_val "8"
	PIN_9 @enum_val "9"
	PIN_10 @enum_val "10"
	PIN_11 @enum_val "11"
	PIN_12 @enum_val "12"
	PIN_13 @enum_val "12"
	A_0 @enum_val "14"
	A_1 @enum_val "15"
	A_2 @enum_val "16"
	A_3 @enum_val "17"
	A_4 @enum_val "18"
	A_5 @enum_val "19"
}

//3, 5, 6, 9, 10, and 11. 
enumeration PWMPin 
	@java_type "byte"
	@c_type "uint8_t"
{
	PWM_PIN_3 @enum_val "3"
	PWM_PIN_5 @enum_val "5"
	PWM_PIN_6 @enum_val "6"
	PWM_PIN_9 @enum_val "9"
	PWM_PIN_10 @enum_val "10"
	PWM_PIN_11 @enum_val "11"
}


enumeration AnalogPin 
	@java_type "byte"
	@c_type "uint8_t"
{
	A_0 @enum_val "14"
	A_1 @enum_val "15"
	A_2 @enum_val "16"
	A_3 @enum_val "17"
	A_4 @enum_val "18"
	A_5 @enum_val "19"
}

enumeration AnalogReference 
	@java_type "byte"
	@c_type "uint8_t"
{
	DEFAULT @enum_val "1"
	INTERNAL @enum_val "3"
	EXTERNAL @enum_val "0"
}

enumeration InterruptPin 
	@java_type "byte"
	@c_type "uint8_t"
{
	PIN_2_INT0 @enum_val "0"
	PIN_3_INT1 @enum_val "1"
}

enumeration InterruptTrigger 
	@java_type "byte"
	@c_type "uint8_t"
{
	CHANGE @enum_val "1"
	RISING @enum_val "3"
	FALLING @enum_val "2"
	LOW @enum_val "0"
}
	
device RemoteArduino 
{
	// Digital I/O
	message pinMode(pin : DigitalPin, mode : PinMode) @code "2";
	message digitalWrite(pin : DigitalPin, value : DigitalState) @code "3";
	message digitalRead(pin : DigitalPin) 
		@sync_response "digitalReadResult#value"
		@timeout "500"
		@retry "0" 
		@code "4";
	message digitalReadResult(value : DigitalState) @code "5";
	receives pinMode, digitalRead, digitalWrite
	sends digitalReadResult
	
	// Analog I/O
	message analogReference(type : AnalogReference) @code "6";
	message analogRead(pin : AnalogPin) 
		@sync_response "analogReadResult#value"
		@timeout "500"
		@retry "0" 
		@code "7";
	message analogReadResult(value : Int16) @code "8";
	message analogWrite(pin : PWMPin, value : Int8) @code "9";
	receives analogReference, analogRead, analogWrite
	sends analogReadResult
	
	// Simple Ping
	message ping()
		@sync_ack "pong"
		@timeout "1000"
		@retry "0" 
		@code "66";
	message pong() @code "67";
	receives ping
	sends pong
	
	// Interrupts
	message attachInterrupt(interrupt : InterruptPin, mode : InterruptTrigger) @code "21";
	message detachInterrupt(interrupt : InterruptPin) @code "22";
	message interruptNotification(interrupt : InterruptPin) @code "23";
	receives attachInterrupt, detachInterrupt
	sends interruptNotification
	
}



