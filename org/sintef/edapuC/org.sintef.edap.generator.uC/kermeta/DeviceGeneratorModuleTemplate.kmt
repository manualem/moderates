package edapuC;
require kermeta
require "edapuC_impl.kmt"
using kermeta::standard
using kermeta::utils
using edap
class DeviceGeneratorModuleTemplate{
operation generate(d: UCDevice):String is do
var _res: StringBuffer init StringBuffer.new
_res.append("package edapuC;\n\nrequire kermeta\nrequire \"../Generator.kmt\"\n")
d.template_names.each{ t | 
_res.append("require \"")
_res.append(t)
_res.append(".kmt\"\n")
}
_res.append("\nusing kermeta::standard\nusing edap\n\n/*\nTo register the code generator:\nrequire \"")
_res.append(d.device.name)
_res.append("/edap_")
_res.append(d.device.name)
_res.append(".kmt\"\n\n")
d.template_names.each{ t | 
_res.append("templates.put(\"")
_res.append(t)
_res.append("\", ")
_res.append(t)
_res.append(".new)\n")
}
_res.append("*/\n\n// Add here any accessors for specific platform annotations\n")
if d.global != void and d.global.generator != void then
_res.append("")
_res.append(d.global.generator )
_res.append("\n")
end
_res.append("")
result := _res.toString
end
}
