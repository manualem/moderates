global java.util.Map uniqueobjects;
global java.util.Map perRole;
global java.util.Map perElem;
Rule "Aspect"
when
$PC_compositeDecl: edap.CompositeState()
$PC_anyStateDecl: edap.State()
$PC_anyToAnotherDecl: edap.Transition()
$PC_anotherStateDecl: edap.State()
$PC_anotherToAnyDecl: edap.Transition()

$PC_composite: edap.CompositeState(this == $PC_compositeDecl, substate contains $PC_anyStateDecl, substate contains $PC_anotherStateDecl)
$PC_anyState: edap.State(this == $PC_anyStateDecl, outgoing contains $PC_anyToAnotherDecl, incoming contains $PC_anotherToAnyDecl)
$PC_anyToAnother: edap.Transition(this == $PC_anyToAnotherDecl, target == $PC_anotherStateDecl, source == $PC_anyStateDecl)
$PC_anotherState: edap.State(this == $PC_anotherStateDecl, outgoing contains $PC_anotherToAnyDecl, incoming contains $PC_anyToAnotherDecl)
$PC_anotherToAny: edap.Transition(this == $PC_anotherToAnyDecl, target == $PC_anyStateDecl, source == $PC_anotherStateDecl)

then

edap.State AD_X = null;
edap.Transition AD_fromX = null;
edap.Transition AD_toX = null;

java.util.Map<String, Object> scope_AD_X = new java.util.HashMap<String, Object>();
scope_AD_X.put("$PC_anotherState", $PC_anotherState);
scope_AD_X.put("$PC_anyState", $PC_anyState);
if (perRole.get(scope_AD_X) == null){
	perRole.put(scope_AD_X, new java.util.HashMap<String, Object>());
}
AD_X = (edap.State) ((java.util.Map<String, Object>) perRole.get(scope_AD_X)).get("AD_X");
if ( AD_X == null){
	AD_X = edap.EdapFactory.eINSTANCE.createState();
	((java.util.Map<String, Object>) perRole.get(scope_AD_X)).put("AD_X",AD_X);
}

if (AD_X == null)
	AD_X = edap.EdapFactory.eINSTANCE.createState();
if (AD_fromX == null)
	AD_fromX = edap.EdapFactory.eINSTANCE.createTransition();
if (AD_toX == null)
	AD_toX = edap.EdapFactory.eINSTANCE.createTransition();

AD_X.setName("X");
AD_X.getOutgoing().add(AD_fromX);
AD_X.getIncoming().add(AD_toX);
AD_fromX.setName("X->");
AD_fromX.setSource(AD_X);
AD_toX.setName("->X");
AD_toX.setTarget(AD_X);

$PC_compositeDecl.getSubstate().add(AD_X);
AD_fromX.setTarget($PC_anotherState);
AD_toX.setSource($PC_anyState);
$PC_anyState.getOutgoing().add(AD_toX);


end
