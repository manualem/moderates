<%@ket
package="thingML"
require="../../stringHelper.kmt"
using=""
isAspectClass="false"
class="EnumGenerator"
ismethod="false"operation="generate"
parameters="packageName:String, enum:edap::Enumeration"
%>
<%var helper : StringHelper init StringHelper.new%>
/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Authors: Franck Fleurey and Brice Morin
 * Company: SINTEF IKT, Oslo, Norway
 * Date: 2011
 */
package <%=packageName%>;

import java.util.HashMap;
import java.util.Map;

public enum E<%=enum.name%> {
	<%var x : Integer init 0 enum.literals.each{l | if x > 0 then%>,\n\t<%end%><%=l.name%>((<%=helper.java_type_annotation(enum)%>)<%=helper.getValue(l)%>)<%x := x+1}%>;

	private final <%=helper.java_type_annotation(enum)%> value;
	
	private E<%=enum.name%>(<%=helper.java_type_annotation(enum)%> value){
		this.value = value;
	}
	
	public <%=helper.java_type_annotation(enum)%> getValue(){
		return value;
	}
	
	private static final Map<<%=helper.firstToUpper(helper.java_type_annotation(enum))%>, E<%=enum.name%>> map;
	
	static {
		map = new HashMap<<%=helper.firstToUpper(helper.java_type_annotation(enum))%>, E<%=enum.name%>>();
		<% enum.literals.each{l | %>
		map.put((<%=helper.java_type_annotation(enum)%>)<%=helper.getValue(l)%>, E<%=enum.name%>.<%=l.name%>);
		<%}%>
	}
	
	public static E<%=enum.name%> fromValue(<%=helper.java_type_annotation(enum)%> b) {
		return map.get(b);
	}
	
}
