package thingML;
require kermeta
require "platform:/lookup/org.sintef.edap.model/model/edap.ecore"
using kermeta::standard
using kermeta::utils
class SimulatorTestGenerator{
operation generate(packageName:String, device:edap::Device):String is do
var _res: StringBuffer init StringBuffer.new
_res.append("package ")
_res.append(packageName)
_res.append(".sim;\n\nimport org.sintef.moderates.sim.Interactive")
_res.append(device.name)
_res.append("DataController;\nimport org.sintef.moderates.sim.Interactive")
_res.append(device.name)
_res.append("DataController2;\n\npublic class Test")
_res.append(device.name)
_res.append(" {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tInteractive")
_res.append(device.name)
_res.append("DataController controller1 = new Interactive")
_res.append(device.name)
_res.append("DataController();\n\t\tInteractive")
_res.append(device.name)
_res.append("DataController2 controller2 = new Interactive")
_res.append(device.name)
_res.append("DataController2();\n\t\tcontroller1.register(controller2);\n\t\tcontroller1.register(controller1);\n\t\tcontroller2.register(controller1);\n\t\tcontroller2.register(controller2);\n\t}\n}")
result := _res.toString
end
}
