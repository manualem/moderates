<%@ket
package="thingML"
require="platform:/lookup/org.sintef.edap.model/model/edap.ecore ../stringHelper.kmt"
using=""
isAspectClass="false"
class="ProtocolGenerator"
ismethod="false"operation="generate"
parameters="packageName:String, device:edap::Device, root:edap::EdapModel"
%>
<%var helper : StringHelper init StringHelper.new%>
package <%=packageName%>;

import <%=packageName%>.msg.*;

public abstract class <%=device.name%>Protocol {

	//Enumerations
	<%root.types.select{t | t.isKindOf(edap::Enumeration)}.each{ e | %>
	public static enum <%=e.name%>{	
		<%var x : Integer init 0 e.asType(edap::Enumeration).literals.each{l | if x > 0 then%>,\n\t\t<%end%><%=l.name%>("<%=helper.getValue(l)%>")<%x := x+1}%>;
	
		private final String value;
		<%=e.name%>(String value){
			this.value = value;
		}
		
		public String getValue(){
			return value;
		}
	}
	<%}%>

	<%device.receives.each{out | %>
	public static final byte <%=helper.toJavaConstant(out.name)%> = <%=out.annotations.select{a | a.name == "code"}.one.~value%>; 
	<%}%>
	<%device.sends.each{in | %>
	public static final byte <%=helper.toJavaConstant(in.name)%> = <%=in.annotations.select{a | a.name == "code"}.one.~value%>; 
	<%}%>
	
	public static FixedSizePacket createMessageFromPacket(byte[] packet) {
		byte packetType = packet[4];
		FixedSizePacket result = null;
		switch(packetType){
			<%device.receives.each{out | %>
			case <%=helper.toJavaConstant(out.name)%>: result = new <%=out.name%>(packet); break; 
			<%}%>
			<%device.sends.each{in | %>
			case <%=helper.toJavaConstant(in.name)%>: result = new <%=in.name%>(packet); break; 
			<%}%>
			default: break;
		}
		return result;
	}

	<%device.receives.each{out | %>
	public static FixedSizePacket create<%=out.name%>(<%=helper.paramsToJava(out)%>) {
		<%=out.name%> result = new <%=out.name%>(<%=helper.paramsToJavaCall(out)%>);
		return result;
	}
	
	<%}%>
	
	<%device.sends.each{out | %>
	public static FixedSizePacket create<%=out.name%>(<%=helper.paramsToJava(out)%>) {
		<%=out.name%> result = new <%=out.name%>(<%=helper.paramsToJavaCall(out)%>);
		return result;
	}
	
	<%}%>
}
