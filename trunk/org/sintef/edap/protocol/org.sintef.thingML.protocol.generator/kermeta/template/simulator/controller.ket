<%@ket
package="thingML"
require="platform:/lookup/org.sintef.edap.model/model/edap.ecore ../../stringHelper.kmt"
using=""
isAspectClass="false"
class="InteractiveDataControllerGenerator"
ismethod="false"operation="generate"
parameters="packageName:String, device:edap::Device, toKevoreeComponent:Boolean"
%>
<%var helper : StringHelper init StringHelper.new%>
package <%=packageName%>;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.nio.ByteBuffer;

<%if toKevoreeComponent then%>
import org.kevoree.annotation.*;
import org.kevoree.framework.AbstractComponentType;
import org.kevoree.framework.MessagePort;
<%end%>

import java.util.logging.Level;
import java.util.logging.Logger;

<%if toKevoreeComponent then%>
@Requires({
    @RequiredPort(name = "out", type = PortType.MESSAGE)
})
@Library(name = "Moderates::Stub")
@ComponentType
<%end%>
public class Interactive<%=device.name%>DataController <%if toKevoreeComponent then%>extends AbstractComponentType <%end%>implements ActionListener {

	private Logger log;

	public Interactive<%=device.name%>DataController(){
		log = Logger.getLogger(Interactive<%=device.name%>DataController.class.getName()); 
		Interactive<%=device.name%>DataGUI.init();
		Interactive<%=device.name%>DataGUI.addListener(this);	
	}
	
	<%if toKevoreeComponent then%>
	@Start
    public void start() {
    	log.log(Level.INFO, "Interactive<%=device.name%>DataController has been started");
    }

    @Stop
    public void stop() {
    	log.log(Level.INFO, "Interactive<%=device.name%>DataController has been stopped");
    }

    @Update
    public void update() {
    
    }
    <%end%>
	

	private void doSend(Object result){
		<%if toKevoreeComponent then%>
		if (this.isPortBinded("out")) {
           	this.getPortByName("out", MessagePort.class).process(result);
          	log.log(Level.INFO, "Message sent "+result);
        } else {
        	log.log(Level.WARNING, "No component connected to output port. Cannot send message: "+result);
        }
        <%else%>
        System.out.println(result);
        <%end%>
	}

	<%device.sends.each{ msg |%>
	public void send<%=msg.name%>() {
		Incoming<%=device.name%>Message result = null;
		byte packet[] = new byte[16];
		packet[4] = <%=device.name%>Protocol.<%=helper.toJavaConstant(msg.name)%>;
		<%if msg.parameters.size > 0 then%>
		boolean valid = true;
		ByteBuffer bb = ByteBuffer.wrap(packet, 5, 10);
		<%msg.parameters.each{ p | %>
		<%=helper.firstToUpper(helper.toJavaType(p.type))%> <%=p.name%> = null;
		<%}%>
		try{
		<%msg.parameters.each{ p | %>
		<%if helper.isJavaString(p.type) then%>
			<%=p.name%> = Interactive<%=device.name%>DataGUI.field<%=msg.name+"_"+p.name%>.getText();
			if (<%=p.name%>.length() > <%=helper.getSize(p.type)%>) <%=p.name%> = <%=p.name%>.substring(0, <%=helper.getSize(p.type)%>-1);
			bb.put(<%=p.name%>.getBytes());
		<%else%>
			<%=p.name%> = <%=helper.firstToUpper(helper.toJavaType(p.type))%>.parse<%=helper.firstToUpper(helper.toJavaType(p.type))%>(Interactive<%=device.name%>DataGUI.field<%=msg.name+"_"+p.name%>.getText());
			<%if helper.isJavaByte(p.type) then%>
			bb.put(<%=p.name%>);
			<%else%>
			bb.put<%=helper.firstToUpper(helper.toJavaType(p.type))%>(<%=p.name%>);
			<%end%>	
		<%end%>
		<%}%>
		} catch (NumberFormatException nfe){
			JOptionPane.showMessageDialog(new JFrame(), "Please check that all the inputs have the right type", "Error: Invalid input", JOptionPane.ERROR_MESSAGE);
			valid = false;
		}
		if (valid){
			result = <%=device.name%>Protocol.createMessageForIncomingPacket(packet);
		}
		<%else%>	
		result = <%=device.name%>Protocol.createMessageForIncomingPacket(packet);
		<%end%>
		if (result != null){
			doSend(result);
		} else {
			log.log(Level.WARNING, "Null message not sent");
		}
	}

	<%}%>


	public void receiveMessage(Object msg){
		Outgoing<%=device.name%>Message data;
		<%var k : Integer init 0%>
		<%device.receives.each{msg |%>
		 <%if k >0 then%>else <%end%>if (msg instanceof <%=msg.name%>) {
		 	data = (Outgoing<%=device.name%>Message) msg;
		 	Interactive<%=device.name%>DataGUI.print<%=msg.name%>(data.getClass().getName()+" ["+System.currentTimeMillis()+"]: "+data.toString());
		 }
		 <%k := k+1%>
		<%}%>	
	}

	@Override
	public void actionPerformed(ActionEvent ae) {
		<%var l : Integer init 0%>
		<%device.sends.each{msg |%>
		 <%if l >0 then%>else <%end%>if ( ae.getSource() == Interactive<%=device.name%>DataGUI.sendButton<%=msg.name%>) {
		 	send<%=msg.name%>();
		 }
		 <%l := l+1%>
		<%}%>	
	}
	
	public static void main(String args[]){
		Interactive<%=device.name%>DataController controller = new Interactive<%=device.name%>DataController();
	}
}